
fieldset{

	@include boxSizing(0 0 40px 0);
	@include stack;
}



$form-theme-config : (

	inputs      : "text" "email" "password" "url" "tel" "search",
	fontFace    : 0.8em $font1,
	dimensions  : (
		fmPadding   : 20px,
		fmRounding  : 10px
	),
	defaultCols : (
		textCol   : #777,
		borderCol : #ddd,
		bgCol     : darken(#FFF,2%),
		btnText   : lighten($col-blue,20%),
		btnBG     : $col-blue,
		btnBorder : darken ($col-blue,5%)
	),
	hoverCols : (
		textCol   : #888,
		borderCol : #aaa,
		bgCol     : #FFF,
		btnText   : lighten($col-blue,25%),
		btnBG     : darken ($col-blue,5%),
		btnBorder : darken ($col-blue,10%)
	),
	focusCols : (
		textCol   : $col-blue,
		borderCol : $col-blue,
		bgCol     : #FFF,
		btnText   : lighten($col-blue,25%),
		btnBG     : darken ($col-blue,5%),
		btnBorder : darken ($col-blue,10%)
	),
	modern-checks : (
		dialColour : $col-green,
		mcHeight   : 25px,
		mcWidth    : 65px,
		rounding   : 5px,
		//insetAmt   : 1px
	)
);

@mixin form-theme($config){

	$inputs        : map-get($config, inputs);
	$fontFace      : map-get($config, fontFace);
	$dimensions    : map-get($config, dimensions);
	$defaultCols   : map-get($config, defaultCols);
	$hoverCols     : map-get($config, hoverCols);
	$focusCols     : map-get($config, focusCols);
	$modern-checks : map-get($config, modern-checks);

		$fmPadding  : map-get($dimensions,fmPadding);
		$fmRounding : map-get($dimensions,fmRounding);

	// Over-rides...
	$inputs     : "text" "email" "password" "url" "tel" "search" !default;
	$fmPadding  : 20px!default;
	$fontFace   : 0.8em georgia, sans-serif !default;

	textarea{

		background-color: map-get($defaultCols,bgCol);
		border: 1px solid map-get($defaultCols,borderCol);
		color : map-get($defaultCols,textCol);
		font:$fontFace;
		width:100%;
		max-width:100%;
		margin:0;
		outline: none;
		padding: $fmPadding;
		@include single-transition(all,0.25s,ease);
		@include box-sizing(border-box);

		@if $fmRounding {

			@include border-radius($fmRounding);
		}

		&:hover{

			background-color: map-get($hoverCols,bgCol);
			border: 1px solid map-get($hoverCols,borderCol);
			color : map-get($hoverCols,textCol);
		}

		&:focus{

			background-color: map-get($focusCols,bgCol);
			border: 1px solid map-get($focusCols,borderCol);
			color : map-get($focusCols,textCol);
		}
	}

	@if $inputs {

		input{
		
			@each $input in $inputs {
				&[type=#{$input}]{
					@extend textarea;
				}
			}

		}

	}

	@if $modern-checks {

		//Styling for a modern iOS inspired checkbox
		

		$dialColour   : map-get($defaultCols,btnBG);
		$check-width  : map-get($modern-checks,mcWidth);
		$check-height : map-get($modern-checks,mcHeight);
		$rounding     : map-get($modern-checks,rounding);
		$inset        : map-get($modern-checks,insetAmt);

		$dialColour   : red !default;
		$check-width  : 50px !default;
		$check-height : 20px !default;
		$rounding     : 5px !default;
		$inset        : -1px !default;

		.modern-check{

			display:block;
			height:$check-height;
			width:$check-width;
			position:relative;
			background:map-get($defaultCols,bgCol);
			border:1px solid map-get($defaultCols,borderCol);
			margin-bottom:10px;
			@include single-transition(all,0.25s,ease);
			@include border-radius($rounding);

			input[type="checkbox"]{

				opacity: 0;
				display:block;
				height:$check-height;
				width:$check-width;
				position:relative;
				z-index: 10;

				& + span{

					background-color:$dialColour;
					border:1px solid #444;
					position: absolute;
					width:$check-height;
					top:$inset;
					left:$inset;
					bottom:$inset;
					@include border-radius($rounding 0 0 $rounding);
					@include single-transition(all,0.25s,ease);

					&:before{

						position: absolute;
						top:-1px;
						left: 0;
						bottom:-1px;
						background-color:lighten($dialColour, 50%);
						width: 0px;
						border: 1px solid lighten($dialColour, 10%);
						opacity: 0;
						@include single-transition(all,0.25s,ease);
						@include border-radius($rounding 0 0 $rounding);
						@include afterBefore;
					}
				}

				&:checked + span{

					left: $check-width - $check-height - ($inset + 2px);
					@include border-radius(0 $rounding $rounding 0);

					&:before {
						
						opacity: 1;
						left: -($check-width - $check-height - ($inset + 1px));
						width: $check-width - $check-height - ($inset + 4px);
					}
				}
			}

			&:hover{

				background-color: map-get($hoverCols,bgCol);
				border: 1px solid map-get($hoverCols,borderCol);

				input[type="checkbox"] + span{
					
					background-color: lighten($dialColour,10%);
				}
			}
		}
	}
}

@include form-theme($form-theme-config);




